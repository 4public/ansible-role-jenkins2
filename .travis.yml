---
##
# The Travis CI build for this project. Yes, it's ironic to build a Jenkins-
# installation role with its competitor. But this is the best option, until 
# this project is complete enough to be capable of dogfooding itself.
##

language: python
python: "2.7"

# The tests will be run in Docker containers, to verify compatibility with
# various OSes.
sudo: required
services:
  - docker

# Each list item here will be run as a separate test by Travis CI.
env:
  - TEST_PLAY=basic_test.yml PLATFORM=ubuntu_16_04 ANSIBLE_SPEC="ansible"
  - TEST_PLAY=basic_test.yml PLATFORM=ubuntu_16_04 ANSIBLE_SPEC="ansible=2.0.2.0"
  # Testing against CentOS would also (mostly) cover RHEL 7.
  #- TEST_PLAY=basic_test.yml PLATFORM=centos_7 ANSIBLE_SPEC="ansible"

addons:
  apt:
    packages:
      # Need this due to hardcoding Ansible hosts' passwords in our test inventory.
      - sshpass

install:
  # Prep the Docker container that will be used.
  - ./.travis/docker_launch.sh "ansible_test_jenkins2"

  # Install Ansible and other required Python libraries.
  - pip install "$ANSIBLE_SPEC" && pip install -r .travis/requirements.txt
  - ansible --version
  - mkdir .travis/roles
  - ln -s `pwd` .travis/roles/karlmdavis.jenkins2

  # Install the additional Ansible roles that are required for testing this one.
  - ansible-galaxy install --roles-path=.travis/roles --role-file=.travis/install_roles.yml

script:
  # Ensure that Ansible treats this folder as the project's base.
  - cd .travis/

  # Basic role syntax check
  - ansible-playbook $TEST_PLAY --inventory-file=inventory --syntax-check

  # Run the Ansible test case.
  - ansible-playbook $TEST_PLAY --inventory-file=inventory

  # Run the role/playbook again, checking to make sure it's idempotent.
  - >
    ansible-playbook $TEST_PLAY --inventory-file=inventory
    | tee /dev/tty
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

after_script:
  # Inspect the management host environment a bit post-test. Just to aid in debugging.
  - pwd
  - ls -la ../
  - ls -la ./
  - ls -la ./roles/

  # Inspect the Docker container a bit post-test. Just to aid in debugging.
  - docker exec ansible_test_bluebutton_data_server.${PLATFORM} /usr/bin/ls /opt/jenkins
  - docker exec ansible_test_bluebutton_data_server.${PLATFORM} /usr/bin/ls /var/lib/jenkins
  - docker exec ansible_test_bluebutton_data_server.${PLATFORM} /usr/bin/ls /var/lib/jenkins/init.groovy.d
  - docker exec ansible_test_bluebutton_data_server.${PLATFORM} /usr/bin/cat /var/log/jenkins/jenkins.log

  # Stop all Docker containers.
  - docker stop $(docker ps -a -q)

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
